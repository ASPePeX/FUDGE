var Fudge;
(function (Fudge) {
    let CONTEXTMENU;
    (function (CONTEXTMENU) {
        // SKETCH = ViewSketch,
        CONTEXTMENU[CONTEXTMENU["ADD_NODE"] = 0] = "ADD_NODE";
        CONTEXTMENU[CONTEXTMENU["ACTIVATE_NODE"] = 1] = "ACTIVATE_NODE";
        CONTEXTMENU[CONTEXTMENU["DELETE_NODE"] = 2] = "DELETE_NODE";
        CONTEXTMENU[CONTEXTMENU["ADD_COMPONENT"] = 3] = "ADD_COMPONENT";
        CONTEXTMENU[CONTEXTMENU["DELETE_COMPONENT"] = 4] = "DELETE_COMPONENT";
        CONTEXTMENU[CONTEXTMENU["ADD_COMPONENT_SCRIPT"] = 5] = "ADD_COMPONENT_SCRIPT";
        CONTEXTMENU[CONTEXTMENU["EDIT"] = 6] = "EDIT";
        CONTEXTMENU[CONTEXTMENU["CREATE_FOLDER"] = 7] = "CREATE_FOLDER";
        CONTEXTMENU[CONTEXTMENU["CREATE_MESH"] = 8] = "CREATE_MESH";
        CONTEXTMENU[CONTEXTMENU["CREATE_MATERIAL"] = 9] = "CREATE_MATERIAL";
        CONTEXTMENU[CONTEXTMENU["CREATE_GRAPH"] = 10] = "CREATE_GRAPH";
        CONTEXTMENU[CONTEXTMENU["CREATE_ANIMATION"] = 11] = "CREATE_ANIMATION";
        CONTEXTMENU[CONTEXTMENU["CREATE_PARTICLE_EFFECT"] = 12] = "CREATE_PARTICLE_EFFECT";
        CONTEXTMENU[CONTEXTMENU["SYNC_INSTANCES"] = 13] = "SYNC_INSTANCES";
        CONTEXTMENU[CONTEXTMENU["REMOVE_COMPONENT"] = 14] = "REMOVE_COMPONENT";
        CONTEXTMENU[CONTEXTMENU["ADD_JOINT"] = 15] = "ADD_JOINT";
        CONTEXTMENU[CONTEXTMENU["DELETE_RESOURCE"] = 16] = "DELETE_RESOURCE";
        CONTEXTMENU[CONTEXTMENU["ORTHGRAPHIC_CAMERA"] = 17] = "ORTHGRAPHIC_CAMERA";
        CONTEXTMENU[CONTEXTMENU["RENDER_CONTINUOUSLY"] = 18] = "RENDER_CONTINUOUSLY";
        CONTEXTMENU[CONTEXTMENU["ADD_PROPERTY"] = 19] = "ADD_PROPERTY";
        CONTEXTMENU[CONTEXTMENU["DELETE_PROPERTY"] = 20] = "DELETE_PROPERTY";
        CONTEXTMENU[CONTEXTMENU["CONVERT_ANIMATION"] = 21] = "CONVERT_ANIMATION";
        CONTEXTMENU[CONTEXTMENU["ADD_PARTICLE_PROPERTY"] = 22] = "ADD_PARTICLE_PROPERTY";
        CONTEXTMENU[CONTEXTMENU["ADD_PARTICLE_FUNCTION"] = 23] = "ADD_PARTICLE_FUNCTION";
        CONTEXTMENU[CONTEXTMENU["ADD_PARTICLE_CONSTANT"] = 24] = "ADD_PARTICLE_CONSTANT";
        CONTEXTMENU[CONTEXTMENU["ADD_PARTICLE_CODE"] = 25] = "ADD_PARTICLE_CODE";
        CONTEXTMENU[CONTEXTMENU["ADD_PARTICLE_TRANSFORMATION"] = 26] = "ADD_PARTICLE_TRANSFORMATION";
        CONTEXTMENU[CONTEXTMENU["DELETE_PARTICLE_DATA"] = 27] = "DELETE_PARTICLE_DATA";
    })(CONTEXTMENU = Fudge.CONTEXTMENU || (Fudge.CONTEXTMENU = {}));
    let MENU;
    (function (MENU) {
        MENU["QUIT"] = "quit";
        MENU["PROJECT_NEW"] = "projectNew";
        MENU["PROJECT_SAVE"] = "projectSave";
        MENU["PROJECT_LOAD"] = "projectLoad";
        MENU["DEVTOOLS_OPEN"] = "devtoolsOpen";
        MENU["PANEL_GRAPH_OPEN"] = "panelGraphOpen";
        MENU["PANEL_ANIMATION_OPEN"] = "panelAnimationOpen";
        MENU["PANEL_PROJECT_OPEN"] = "panelProjectOpen";
        MENU["PANEL_HELP_OPEN"] = "panelHelpOpen";
        MENU["PANEL_PARTICLE_SYSTEM_OPEN"] = "panelParticleSystemOpen";
        MENU["FULLSCREEN"] = "fullscreen";
    })(MENU = Fudge.MENU || (Fudge.MENU = {}));
    let PANEL;
    (function (PANEL) {
        PANEL["GRAPH"] = "PanelGraph";
        PANEL["PROJECT"] = "PanelProject";
        PANEL["HELP"] = "PanelHelp";
        PANEL["ANIMATION"] = "PanelAnimation";
        PANEL["PARTICLE_SYSTEM"] = "PanelParticleSystem";
    })(PANEL = Fudge.PANEL || (Fudge.PANEL = {}));
    let VIEW;
    (function (VIEW) {
        VIEW["HIERARCHY"] = "ViewHierarchy";
        VIEW["ANIMATION"] = "ViewAnimation";
        VIEW["ANIMATION_SHEET"] = "ViewAnimationSheet";
        VIEW["RENDER"] = "ViewRender";
        VIEW["COMPONENTS"] = "ViewComponents";
        VIEW["CAMERA"] = "ViewCamera";
        VIEW["INTERNAL_TABLE"] = "ViewInternalTable";
        VIEW["INTERNAL_FOLDER"] = "ViewInternalFolder";
        VIEW["EXTERNAL"] = "ViewExternal";
        VIEW["PROPERTIES"] = "ViewProperties";
        VIEW["PREVIEW"] = "ViewPreview";
        VIEW["SCRIPT"] = "ViewScript";
        VIEW["PARTICLE_SYSTEM"] = "ViewParticleSystem";
        // SKETCH = ViewSketch,
        // MESH = ViewMesh,
    })(VIEW = Fudge.VIEW || (Fudge.VIEW = {}));
    let TRANSFORM;
    (function (TRANSFORM) {
        TRANSFORM["TRANSLATE"] = "translate";
        TRANSFORM["ROTATE"] = "rotate";
        TRANSFORM["SCALE"] = "scale";
    })(TRANSFORM = Fudge.TRANSFORM || (Fudge.TRANSFORM = {}));
    let GIZMOS;
    (function (GIZMOS) {
        GIZMOS["TRANSFORM"] = "Transform";
    })(GIZMOS = Fudge.GIZMOS || (Fudge.GIZMOS = {}));
})(Fudge || (Fudge = {}));
///<reference types="../../node_modules/electron"/>
/**
 * Main electron application running node. Starts the browser window to contain Fudge and sets up the main menu.
 * See subfolder Fudge for most of the other functionality
 */
var Main;
///<reference types="../../node_modules/electron"/>
/**
 * Main electron application running node. Starts the browser window to contain Fudge and sets up the main menu.
 * See subfolder Fudge for most of the other functionality
 */
(function (Main) {
    //#region Types and Data
    // eslint-disable-next-line @typescript-eslint/naming-convention
    const { app, BrowserWindow, Menu, ipcMain } = require("electron");
    // couldn't find type in electron d.ts file
    const remote = require("@electron/remote/main");
    remote.initialize();
    let fudge;
    let defaultWidth = 800;
    let defaultHeight = 600;
    let saved = false;
    //#endregion
    // app.commandLine.appendSwitch("autoplay-policy", "no-user-gesture-required");
    //#region Events 
    app.addListener("ready", createFudge);
    app.addListener("activate", function () {
        console.log("Activate");
        if (fudge === null)
            createFudge();
    });
    ipcMain.addListener("enableMenuItem", function (_event, _args) {
        Menu.getApplicationMenu().getMenuItemById(_args["item"]).enabled = _args["on"];
    });
    function quit(_event) {
        if (!saved) {
            if ("type" in _event)
                console.log("Trying to save state!", _event.type);
            // _event.preventDefault();
            send(fudge, Fudge.MENU.QUIT);
            saved = true;
            if (process.platform !== "darwin")
                app.quit();
        }
    }
    function send(_window, _message, ..._args) {
        console.log(`Send message ${_message}`);
        _window.webContents.send(_message, _args);
    }
    //#endregion
    //#region Window
    function createFudge() {
        console.log("createFudge");
        fudge = addWindow("../Html/Fudge.html");
        const menu = Menu.buildFromTemplate(getMenuFudge());
        // fudge.setMenu(menu);
        Menu.setApplicationMenu(menu);
        fudge.on("close", quit);
    }
    function addWindow(_url, _width = defaultWidth, _height = defaultHeight) {
        let window = new BrowserWindow({
            width: _width,
            height: _height,
            // fullscreen: true,
            webPreferences: {
                nodeIntegration: true,
                contextIsolation: false
            }
        });
        remote.enable(window.webContents);
        window.webContents.openDevTools();
        window.loadFile(_url);
        window.maximize();
        return window;
    }
    // #endregion
    //#region Menus  
    function menuSelect(_item, _window, _event) {
        console.log(`MenuSelect: Item-id=${Fudge.MENU[_item.id]}`);
        // TODO: simplify switch using enums as messages
        switch (_item.id) {
            case Fudge.MENU.DEVTOOLS_OPEN:
                _window.webContents.openDevTools();
                break;
            case Fudge.MENU.FULLSCREEN:
                _window.fullScreen = !_window.isFullScreen();
                break;
            case Fudge.MENU.QUIT:
                quit({ type: "Ctrl+Q" });
                break;
            default:
                send(_window, _item.id, null);
                break;
        }
    }
    function getMenuFudge() {
        const menu = [
            {
                label: "Project", submenu: [
                    { label: "New", id: Fudge.MENU.PROJECT_NEW, click: menuSelect, accelerator: process.platform == "darwin" ? "Command+N" : "Ctrl+N" },
                    { label: "Load", id: Fudge.MENU.PROJECT_LOAD, click: menuSelect, accelerator: process.platform == "darwin" ? "Command+L" : "Ctrl+L" },
                    { label: "Save", id: Fudge.MENU.PROJECT_SAVE, click: menuSelect, accelerator: process.platform == "darwin" ? "Command+S" : "Ctrl+S", enabled: false },
                    { label: "Quit", id: Fudge.MENU.QUIT, click: menuSelect, accelerator: process.platform == "darwin" ? "Command+Q" : "Ctrl+Q" }
                ]
            },
            {
                label: "Panel", submenu: [
                    { label: "Help", id: Fudge.MENU.PANEL_HELP_OPEN, click: menuSelect, accelerator: process.platform == "darwin" ? "Command+H" : "Ctrl+H", enabled: true },
                    { label: "Project", id: Fudge.MENU.PANEL_PROJECT_OPEN, click: menuSelect, accelerator: process.platform == "darwin" ? "Command+R" : "Ctrl+R", enabled: false },
                    { label: "Graph", id: Fudge.MENU.PANEL_GRAPH_OPEN, click: menuSelect, accelerator: process.platform == "darwin" ? "Command+G" : "Ctrl+G", enabled: false },
                    { label: "Animation", id: Fudge.MENU.PANEL_ANIMATION_OPEN, click: menuSelect, accelerator: process.platform == "darwin" ? "Command+I" : "Ctrl+I", enabled: false },
                    { label: "Particle System", id: Fudge.MENU.PANEL_PARTICLE_SYSTEM_OPEN, click: menuSelect, accelerator: process.platform == "darwin" ? "" : "", enabled: false }
                ]
            },
            {
                label: "Debug", submenu: [
                    { label: "DevTool", id: Fudge.MENU.DEVTOOLS_OPEN, click: menuSelect, accelerator: process.platform == "darwin" ? "F12" : "F12" },
                    { label: "Fullscreen", id: Fudge.MENU.FULLSCREEN, click: menuSelect, accelerator: process.platform == "darwin" ? "F11" : "F11" }
                ]
            }
        ];
        return menu;
    }
    // #endregion
})(Main || (Main = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL1NvdXJjZS9GdWRnZS9EZWZpbml0aW9uLnRzIiwiLi4vU291cmNlL01haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBVSxLQUFLLENBb0ZkO0FBcEZELFdBQVUsS0FBSztJQUNiLElBQVksV0E4Qlg7SUE5QkQsV0FBWSxXQUFXO1FBQ3JCLHVCQUF1QjtRQUN2QixxREFBUSxDQUFBO1FBQ1IsK0RBQWEsQ0FBQTtRQUNiLDJEQUFXLENBQUE7UUFDWCwrREFBYSxDQUFBO1FBQ2IscUVBQWdCLENBQUE7UUFDaEIsNkVBQW9CLENBQUE7UUFDcEIsNkNBQUksQ0FBQTtRQUNKLCtEQUFhLENBQUE7UUFDYiwyREFBVyxDQUFBO1FBQ1gsbUVBQWUsQ0FBQTtRQUNmLDhEQUFZLENBQUE7UUFDWixzRUFBZ0IsQ0FBQTtRQUNoQixrRkFBc0IsQ0FBQTtRQUN0QixrRUFBYyxDQUFBO1FBQ2Qsc0VBQWdCLENBQUE7UUFDaEIsd0RBQVMsQ0FBQTtRQUNULG9FQUFlLENBQUE7UUFDZiwwRUFBa0IsQ0FBQTtRQUNsQiw0RUFBbUIsQ0FBQTtRQUNuQiw4REFBWSxDQUFBO1FBQ1osb0VBQWUsQ0FBQTtRQUNmLHdFQUFpQixDQUFBO1FBQ2pCLGdGQUFxQixDQUFBO1FBQ3JCLGdGQUFxQixDQUFBO1FBQ3JCLGdGQUFxQixDQUFBO1FBQ3JCLHdFQUFpQixDQUFBO1FBQ2pCLDRGQUEyQixDQUFBO1FBQzNCLDhFQUFvQixDQUFBO0lBQ3RCLENBQUMsRUE5QlcsV0FBVyxHQUFYLGlCQUFXLEtBQVgsaUJBQVcsUUE4QnRCO0lBR0QsSUFBWSxJQVlYO0lBWkQsV0FBWSxJQUFJO1FBQ2QscUJBQWEsQ0FBQTtRQUNiLGtDQUEwQixDQUFBO1FBQzFCLG9DQUE0QixDQUFBO1FBQzVCLG9DQUE0QixDQUFBO1FBQzVCLHNDQUE4QixDQUFBO1FBQzlCLDJDQUFtQyxDQUFBO1FBQ25DLG1EQUEyQyxDQUFBO1FBQzND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LEVBQUU7b0JBQ3ZCLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsT0FBTyxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFO29CQUNoSSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE9BQU8sQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRTtpQkFDakk7YUFDRjtTQUFDLENBQUM7UUFDTCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFDRCxhQUFhO0FBQ2YsQ0FBQyxFQTlIUyxJQUFJLEtBQUosSUFBSSxRQThIYiIsInNvdXJjZXNDb250ZW50IjpbIm5hbWVzcGFjZSBGdWRnZSB7XHJcbiAgZXhwb3J0IGVudW0gQ09OVEVYVE1FTlUge1xyXG4gICAgLy8gU0tFVENIID0gVmlld1NrZXRjaCxcclxuICAgIEFERF9OT0RFLFxyXG4gICAgQUNUSVZBVEVfTk9ERSxcclxuICAgIERFTEVURV9OT0RFLFxyXG4gICAgQUREX0NPTVBPTkVOVCxcclxuICAgIERFTEVURV9DT01QT05FTlQsXHJcbiAgICBBRERfQ09NUE9ORU5UX1NDUklQVCxcclxuICAgIEVESVQsXHJcbiAgICBDUkVBVEVfRk9MREVSLFxyXG4gICAgQ1JFQVRFX01FU0gsXHJcbiAgICBDUkVBVEVfTUFURVJJQUwsXHJcbiAgICBDUkVBVEVfR1JBUEgsXHJcbiAgICBDUkVBVEVfQU5JTUFUSU9OLFxyXG4gICAgQ1JFQVRFX1BBUlRJQ0xFX0VGRkVDVCxcclxuICAgIFNZTkNfSU5TVEFOQ0VTLFxyXG4gICAgUkVNT1ZFX0NPTVBPTkVOVCxcclxuICAgIEFERF9KT0lOVCxcclxuICAgIERFTEVURV9SRVNPVVJDRSxcclxuICAgIE9SVEhHUkFQSElDX0NBTUVSQSxcclxuICAgIFJFTkRFUl9DT05USU5VT1VTTFksXHJcbiAgICBBRERfUFJPUEVSVFksXHJcbiAgICBERUxFVEVfUFJPUEVSVFksXHJcbiAgICBDT05WRVJUX0FOSU1BVElPTixcclxuICAgIEFERF9QQVJUSUNMRV9QUk9QRVJUWSxcclxuICAgIEFERF9QQVJUSUNMRV9GVU5DVElPTixcclxuICAgIEFERF9QQVJUSUNMRV9DT05TVEFOVCxcclxuICAgIEFERF9QQVJUSUNMRV9DT0RFLFxyXG4gICAgQUREX1BBUlRJQ0xFX1RSQU5TRk9STUFUSU9OLFxyXG4gICAgREVMRVRFX1BBUlRJQ0xFX0RBVEFcclxuICB9XHJcblxyXG5cclxuICBleHBvcnQgZW51bSBNRU5VIHtcclxuICAgIFFVSVQgPSBcInF1aXRcIixcclxuICAgIFBST0pFQ1RfTkVXID0gXCJwcm9qZWN0TmV3XCIsXHJcbiAgICBQUk9KRUNUX1NBVkUgPSBcInByb2plY3RTYXZlXCIsXHJcbiAgICBQUk9KRUNUX0xPQUQgPSBcInByb2plY3RMb2FkXCIsXHJcbiAgICBERVZUT09MU19PUEVOID0gXCJkZXZ0b29sc09wZW5cIixcclxuICAgIFBBTkVMX0dSQVBIX09QRU4gPSBcInBhbmVsR3JhcGhPcGVuXCIsXHJcbiAgICBQQU5FTF9BTklNQVRJT05fT1BFTiA9IFwicGFuZWxBbmltYXRpb25PcGVuXCIsXHJcbiAgICBQQU5FTF9QUk9KRUNUX09QRU4gPSBcInBhbmVsUHJvamVjdE9wZW5cIixcclxuICAgIFBBTkVMX0hFTFBfT1BFTiA9IFwicGFuZWxIZWxwT3BlblwiLFxyXG4gICAgUEFORUxfUEFSVElDTEVfU1lTVEVNX09QRU4gPSBcInBhbmVsUGFydGljbGVTeXN0ZW1PcGVuXCIsXHJcbiAgICBGVUxMU0NSRUVOID0gXCJmdWxsc2NyZWVuXCJcclxuICB9XHJcblxyXG4gIGV4cG9ydCBlbnVtIFBBTkVMIHtcclxuICAgIEdSQVBIID0gXCJQYW5lbEdyYXBoXCIsXHJcbiAgICBQUk9KRUNUID0gXCJQYW5lbFByb2plY3RcIixcclxuICAgIEhFTFAgPSBcIlBhbmVsSGVscFwiLFxyXG4gICAgQU5JTUFUSU9OID0gXCJQYW5lbEFuaW1hdGlvblwiLFxyXG4gICAgUEFSVElDTEVfU1lTVEVNID0gXCJQYW5lbFBhcnRpY2xlU3lzdGVtXCJcclxuXHJcbiAgfVxyXG5cclxuICBleHBvcnQgZW51bSBWSUVXIHtcclxuICAgIEhJRVJBUkNIWSA9IFwiVmlld0hpZXJhcmNoeVwiLFxyXG4gICAgQU5JTUFUSU9OID0gXCJWaWV3QW5pbWF0aW9uXCIsXHJcbiAgICBBTklNQVRJT05fU0hFRVQgPSBcIlZpZXdBbmltYXRpb25TaGVldFwiLFxyXG4gICAgUkVOREVSID0gXCJWaWV3UmVuZGVyXCIsXHJcbiAgICBDT01QT05FTlRTID0gXCJWaWV3Q29tcG9uZW50c1wiLFxyXG4gICAgQ0FNRVJBID0gXCJWaWV3Q2FtZXJhXCIsXHJcbiAgICBJTlRFUk5BTF9UQUJMRSA9IFwiVmlld0ludGVybmFsVGFibGVcIixcclxuICAgIElOVEVSTkFMX0ZPTERFUiA9IFwiVmlld0ludGVybmFsRm9sZGVyXCIsXHJcbiAgICBFWFRFUk5BTCA9IFwiVmlld0V4dGVybmFsXCIsXHJcbiAgICBQUk9QRVJUSUVTID0gXCJWaWV3UHJvcGVydGllc1wiLFxyXG4gICAgUFJFVklFVyA9IFwiVmlld1ByZXZpZXdcIixcclxuICAgIFNDUklQVCA9IFwiVmlld1NjcmlwdFwiLFxyXG4gICAgUEFSVElDTEVfU1lTVEVNID0gXCJWaWV3UGFydGljbGVTeXN0ZW1cIlxyXG4gICAgLy8gU0tFVENIID0gVmlld1NrZXRjaCxcclxuICAgIC8vIE1FU0ggPSBWaWV3TWVzaCxcclxuICB9XHJcblxyXG4gIGV4cG9ydCBlbnVtIFRSQU5TRk9STSB7XHJcbiAgICBUUkFOU0xBVEUgPSBcInRyYW5zbGF0ZVwiLFxyXG4gICAgUk9UQVRFID0gXCJyb3RhdGVcIixcclxuICAgIFNDQUxFID0gXCJzY2FsZVwiXHJcbiAgfVxyXG5cclxuICBleHBvcnQgZW51bSBHSVpNT1Mge1xyXG4gICAgVFJBTlNGT1JNID0gXCJUcmFuc2Zvcm1cIlxyXG4gIH1cclxufSIsIi8vLzxyZWZlcmVuY2UgdHlwZXM9XCIuLi8uLi9ub2RlX21vZHVsZXMvZWxlY3Ryb25cIi8+XHJcblxyXG4vKipcclxuICogTWFpbiBlbGVjdHJvbiBhcHBsaWNhdGlvbiBydW5uaW5nIG5vZGUuIFN0YXJ0cyB0aGUgYnJvd3NlciB3aW5kb3cgdG8gY29udGFpbiBGdWRnZSBhbmQgc2V0cyB1cCB0aGUgbWFpbiBtZW51LlxyXG4gKiBTZWUgc3ViZm9sZGVyIEZ1ZGdlIGZvciBtb3N0IG9mIHRoZSBvdGhlciBmdW5jdGlvbmFsaXR5XHJcbiAqL1xyXG5uYW1lc3BhY2UgTWFpbiB7XHJcbiAgLy8jcmVnaW9uIFR5cGVzIGFuZCBEYXRhXHJcblxyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cclxuICBjb25zdCB7IGFwcCwgQnJvd3NlcldpbmRvdywgTWVudSwgaXBjTWFpbiB9ID0gcmVxdWlyZShcImVsZWN0cm9uXCIpO1xyXG5cclxuICAvLyBjb3VsZG4ndCBmaW5kIHR5cGUgaW4gZWxlY3Ryb24gZC50cyBmaWxlXHJcbiAgY29uc3QgcmVtb3RlOiB7IGluaXRpYWxpemU6ICgpID0+IHZvaWQ7IGVuYWJsZTogKGNvbnRlbnRzOiBFbGVjdHJvbi5XZWJDb250ZW50cykgPT4gdm9pZCB9ID0gcmVxdWlyZShcIkBlbGVjdHJvbi9yZW1vdGUvbWFpblwiKTtcclxuXHJcbiAgcmVtb3RlLmluaXRpYWxpemUoKTtcclxuXHJcbiAgbGV0IGZ1ZGdlOiBFbGVjdHJvbi5Ccm93c2VyV2luZG93O1xyXG4gIGxldCBkZWZhdWx0V2lkdGg6IG51bWJlciA9IDgwMDtcclxuICBsZXQgZGVmYXVsdEhlaWdodDogbnVtYmVyID0gNjAwO1xyXG4gIGxldCBzYXZlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyBhcHAuY29tbWFuZExpbmUuYXBwZW5kU3dpdGNoKFwiYXV0b3BsYXktcG9saWN5XCIsIFwibm8tdXNlci1nZXN0dXJlLXJlcXVpcmVkXCIpO1xyXG5cclxuICAvLyNyZWdpb24gRXZlbnRzIFxyXG4gIGFwcC5hZGRMaXN0ZW5lcihcInJlYWR5XCIsIGNyZWF0ZUZ1ZGdlKTtcclxuICBhcHAuYWRkTGlzdGVuZXIoXCJhY3RpdmF0ZVwiLCBmdW5jdGlvbiAoKTogdm9pZCB7XHJcbiAgICBjb25zb2xlLmxvZyhcIkFjdGl2YXRlXCIpO1xyXG4gICAgaWYgKGZ1ZGdlID09PSBudWxsKSBjcmVhdGVGdWRnZSgpO1xyXG4gIH0pO1xyXG5cclxuICBpcGNNYWluLmFkZExpc3RlbmVyKFwiZW5hYmxlTWVudUl0ZW1cIiwgZnVuY3Rpb24gKF9ldmVudDogRWxlY3Ryb24uRXZlbnQsIF9hcmdzOiBPYmplY3QpOiB2b2lkIHtcclxuICAgIE1lbnUuZ2V0QXBwbGljYXRpb25NZW51KCkuZ2V0TWVudUl0ZW1CeUlkKF9hcmdzW1wiaXRlbVwiXSkuZW5hYmxlZCA9IF9hcmdzW1wib25cIl07XHJcbiAgfSk7XHJcblxyXG4gIGZ1bmN0aW9uIHF1aXQoX2V2ZW50OiBFbGVjdHJvbi5FdmVudCB8IHsgdHlwZTogc3RyaW5nIH0pOiB2b2lkIHtcclxuICAgIGlmICghc2F2ZWQpIHtcclxuICAgICAgaWYgKFwidHlwZVwiIGluIF9ldmVudClcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlRyeWluZyB0byBzYXZlIHN0YXRlIVwiLCBfZXZlbnQudHlwZSk7XHJcbiAgICAgIC8vIF9ldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBzZW5kKGZ1ZGdlLCBGdWRnZS5NRU5VLlFVSVQpO1xyXG4gICAgICBzYXZlZCA9IHRydWU7XHJcbiAgICAgIGlmIChwcm9jZXNzLnBsYXRmb3JtICE9PSBcImRhcndpblwiKVxyXG4gICAgICAgIGFwcC5xdWl0KCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBzZW5kKF93aW5kb3c6IEVsZWN0cm9uLkJyb3dzZXJXaW5kb3csIF9tZXNzYWdlOiBzdHJpbmcsIC4uLl9hcmdzOiB1bmtub3duW10pOiB2b2lkIHtcclxuICAgIGNvbnNvbGUubG9nKGBTZW5kIG1lc3NhZ2UgJHtfbWVzc2FnZX1gKTtcclxuICAgIF93aW5kb3cud2ViQ29udGVudHMuc2VuZChfbWVzc2FnZSwgX2FyZ3MpO1xyXG4gIH1cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIFdpbmRvd1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZUZ1ZGdlKCk6IHZvaWQge1xyXG4gICAgY29uc29sZS5sb2coXCJjcmVhdGVGdWRnZVwiKTtcclxuICAgIGZ1ZGdlID0gYWRkV2luZG93KFwiLi4vSHRtbC9GdWRnZS5odG1sXCIpO1xyXG4gICAgY29uc3QgbWVudTogRWxlY3Ryb24uTWVudSA9IE1lbnUuYnVpbGRGcm9tVGVtcGxhdGUoZ2V0TWVudUZ1ZGdlKCkpO1xyXG4gICAgLy8gZnVkZ2Uuc2V0TWVudShtZW51KTtcclxuICAgIE1lbnUuc2V0QXBwbGljYXRpb25NZW51KG1lbnUpO1xyXG4gICAgZnVkZ2Uub24oXCJjbG9zZVwiLCBxdWl0KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGFkZFdpbmRvdyhfdXJsOiBzdHJpbmcsIF93aWR0aDogbnVtYmVyID0gZGVmYXVsdFdpZHRoLCBfaGVpZ2h0OiBudW1iZXIgPSBkZWZhdWx0SGVpZ2h0KTogRWxlY3Ryb24uQnJvd3NlcldpbmRvdyB7XHJcbiAgICBsZXQgd2luZG93OiBFbGVjdHJvbi5Ccm93c2VyV2luZG93ID0gbmV3IEJyb3dzZXJXaW5kb3coe1xyXG4gICAgICB3aWR0aDogX3dpZHRoLFxyXG4gICAgICBoZWlnaHQ6IF9oZWlnaHQsXHJcbiAgICAgIC8vIGZ1bGxzY3JlZW46IHRydWUsXHJcbiAgICAgIHdlYlByZWZlcmVuY2VzOiB7ICAgICAgICAvLyBwcmVsb2FkOiBwYXRoLmpvaW4oX19kaXJuYW1lLCBcInByZWxvYWQuanNcIiksXHJcbiAgICAgICAgbm9kZUludGVncmF0aW9uOiB0cnVlLFxyXG4gICAgICAgIGNvbnRleHRJc29sYXRpb246IGZhbHNlXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHJlbW90ZS5lbmFibGUod2luZG93LndlYkNvbnRlbnRzKTtcclxuXHJcbiAgICB3aW5kb3cud2ViQ29udGVudHMub3BlbkRldlRvb2xzKCk7XHJcbiAgICB3aW5kb3cubG9hZEZpbGUoX3VybCk7XHJcbiAgICB3aW5kb3cubWF4aW1pemUoKTtcclxuICAgIHJldHVybiB3aW5kb3c7XHJcbiAgfVxyXG4gIC8vICNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIE1lbnVzICBcclxuICBmdW5jdGlvbiBtZW51U2VsZWN0KF9pdGVtOiBFbGVjdHJvbi5NZW51SXRlbSwgX3dpbmRvdzogRWxlY3Ryb24uQnJvd3NlcldpbmRvdywgX2V2ZW50OiBFbGVjdHJvbi5LZXlib2FyZEV2ZW50KTogdm9pZCB7XHJcbiAgICBjb25zb2xlLmxvZyhgTWVudVNlbGVjdDogSXRlbS1pZD0ke0Z1ZGdlLk1FTlVbX2l0ZW0uaWRdfWApO1xyXG4gICAgLy8gVE9ETzogc2ltcGxpZnkgc3dpdGNoIHVzaW5nIGVudW1zIGFzIG1lc3NhZ2VzXHJcbiAgICBzd2l0Y2ggKF9pdGVtLmlkKSB7XHJcbiAgICAgIGNhc2UgRnVkZ2UuTUVOVS5ERVZUT09MU19PUEVOOlxyXG4gICAgICAgIF93aW5kb3cud2ViQ29udGVudHMub3BlbkRldlRvb2xzKCk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgRnVkZ2UuTUVOVS5GVUxMU0NSRUVOOlxyXG4gICAgICAgIF93aW5kb3cuZnVsbFNjcmVlbiA9ICFfd2luZG93LmlzRnVsbFNjcmVlbigpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIEZ1ZGdlLk1FTlUuUVVJVDpcclxuICAgICAgICBxdWl0KHsgdHlwZTogXCJDdHJsK1FcIiB9KTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICBzZW5kKF93aW5kb3csIF9pdGVtLmlkLCBudWxsKTtcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdldE1lbnVGdWRnZSgpOiBFbGVjdHJvbi5NZW51SXRlbUNvbnN0cnVjdG9yT3B0aW9uc1tdIHtcclxuICAgIGNvbnN0IG1lbnU6IEVsZWN0cm9uLk1lbnVJdGVtQ29uc3RydWN0b3JPcHRpb25zW10gPSBbXHJcbiAgICAgIHtcclxuICAgICAgICBsYWJlbDogXCJQcm9qZWN0XCIsIHN1Ym1lbnU6IFtcclxuICAgICAgICAgIHsgbGFiZWw6IFwiTmV3XCIsIGlkOiBGdWRnZS5NRU5VLlBST0pFQ1RfTkVXLCBjbGljazogbWVudVNlbGVjdCwgYWNjZWxlcmF0b3I6IHByb2Nlc3MucGxhdGZvcm0gPT0gXCJkYXJ3aW5cIiA/IFwiQ29tbWFuZCtOXCIgOiBcIkN0cmwrTlwiIH0sXHJcbiAgICAgICAgICB7IGxhYmVsOiBcIkxvYWRcIiwgaWQ6IEZ1ZGdlLk1FTlUuUFJPSkVDVF9MT0FELCBjbGljazogbWVudVNlbGVjdCwgYWNjZWxlcmF0b3I6IHByb2Nlc3MucGxhdGZvcm0gPT0gXCJkYXJ3aW5cIiA/IFwiQ29tbWFuZCtMXCIgOiBcIkN0cmwrTFwiIH0sXHJcbiAgICAgICAgICB7IGxhYmVsOiBcIlNhdmVcIiwgaWQ6IEZ1ZGdlLk1FTlUuUFJPSkVDVF9TQVZFLCBjbGljazogbWVudVNlbGVjdCwgYWNjZWxlcmF0b3I6IHByb2Nlc3MucGxhdGZvcm0gPT0gXCJkYXJ3aW5cIiA/IFwiQ29tbWFuZCtTXCIgOiBcIkN0cmwrU1wiLCBlbmFibGVkOiBmYWxzZSB9LFxyXG4gICAgICAgICAgeyBsYWJlbDogXCJRdWl0XCIsIGlkOiBGdWRnZS5NRU5VLlFVSVQsIGNsaWNrOiBtZW51U2VsZWN0LCBhY2NlbGVyYXRvcjogcHJvY2Vzcy5wbGF0Zm9ybSA9PSBcImRhcndpblwiID8gXCJDb21tYW5kK1FcIiA6IFwiQ3RybCtRXCIgfVxyXG4gICAgICAgIF1cclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGxhYmVsOiBcIlBhbmVsXCIsIHN1Ym1lbnU6IFtcclxuICAgICAgICAgIHsgbGFiZWw6IFwiSGVscFwiLCBpZDogRnVkZ2UuTUVOVS5QQU5FTF9IRUxQX09QRU4sIGNsaWNrOiBtZW51U2VsZWN0LCBhY2NlbGVyYXRvcjogcHJvY2Vzcy5wbGF0Zm9ybSA9PSBcImRhcndpblwiID8gXCJDb21tYW5kK0hcIiA6IFwiQ3RybCtIXCIsIGVuYWJsZWQ6IHRydWUgfSxcclxuICAgICAgICAgIHsgbGFiZWw6IFwiUHJvamVjdFwiLCBpZDogRnVkZ2UuTUVOVS5QQU5FTF9QUk9KRUNUX09QRU4sIGNsaWNrOiBtZW51U2VsZWN0LCBhY2NlbGVyYXRvcjogcHJvY2Vzcy5wbGF0Zm9ybSA9PSBcImRhcndpblwiID8gXCJDb21tYW5kK1JcIiA6IFwiQ3RybCtSXCIsIGVuYWJsZWQ6IGZhbHNlIH0sXHJcbiAgICAgICAgICB7IGxhYmVsOiBcIkdyYXBoXCIsIGlkOiBGdWRnZS5NRU5VLlBBTkVMX0dSQVBIX09QRU4sIGNsaWNrOiBtZW51U2VsZWN0LCBhY2NlbGVyYXRvcjogcHJvY2Vzcy5wbGF0Zm9ybSA9PSBcImRhcndpblwiID8gXCJDb21tYW5kK0dcIiA6IFwiQ3RybCtHXCIsIGVuYWJsZWQ6IGZhbHNlIH0sXHJcbiAgICAgICAgICB7IGxhYmVsOiBcIkFuaW1hdGlvblwiLCBpZDogRnVkZ2UuTUVOVS5QQU5FTF9BTklNQVRJT05fT1BFTiwgY2xpY2s6IG1lbnVTZWxlY3QsIGFjY2VsZXJhdG9yOiBwcm9jZXNzLnBsYXRmb3JtID09IFwiZGFyd2luXCIgPyBcIkNvbW1hbmQrSVwiIDogXCJDdHJsK0lcIiwgZW5hYmxlZDogZmFsc2UgfSxcclxuICAgICAgICAgIHsgbGFiZWw6IFwiUGFydGljbGUgU3lzdGVtXCIsIGlkOiBGdWRnZS5NRU5VLlBBTkVMX1BBUlRJQ0xFX1NZU1RFTV9PUEVOLCBjbGljazogbWVudVNlbGVjdCwgYWNjZWxlcmF0b3I6IHByb2Nlc3MucGxhdGZvcm0gPT0gXCJkYXJ3aW5cIiA/IFwiXCIgOiBcIlwiLCBlbmFibGVkOiBmYWxzZSB9XHJcbiAgICAgICAgXVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgbGFiZWw6IFwiRGVidWdcIiwgc3VibWVudTogW1xyXG4gICAgICAgICAgeyBsYWJlbDogXCJEZXZUb29sXCIsIGlkOiBGdWRnZS5NRU5VLkRFVlRPT0xTX09QRU4sIGNsaWNrOiBtZW51U2VsZWN0LCBhY2NlbGVyYXRvcjogcHJvY2Vzcy5wbGF0Zm9ybSA9PSBcImRhcndpblwiID8gXCJGMTJcIiA6IFwiRjEyXCIgfSxcclxuICAgICAgICAgIHsgbGFiZWw6IFwiRnVsbHNjcmVlblwiLCBpZDogRnVkZ2UuTUVOVS5GVUxMU0NSRUVOLCBjbGljazogbWVudVNlbGVjdCwgYWNjZWxlcmF0b3I6IHByb2Nlc3MucGxhdGZvcm0gPT0gXCJkYXJ3aW5cIiA/IFwiRjExXCIgOiBcIkYxMVwiIH1cclxuICAgICAgICBdXHJcbiAgICAgIH1dO1xyXG4gICAgcmV0dXJuIG1lbnU7XHJcbiAgfVxyXG4gIC8vICNlbmRyZWdpb25cclxufVxyXG4iXX0=